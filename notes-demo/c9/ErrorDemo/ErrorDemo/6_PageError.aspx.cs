using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace ErrorDemo
{
    public partial class _6_PageError : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        protected void Button1_Click(object sender, EventArgs e)
        {
            int[] array = new int[8];

            for (int intCounter = 0; intCounter <= 9; intCounter++)
            {
                array[intCounter] = intCounter;
                Response.Write("The value of the counter is:" + intCounter.ToString() + "<br>");
            }
        }
        protected void Button2_Click(object sender, EventArgs e)
        {
            Response.Write(Convert.ToInt32("abc"));
        }

        void Page_Error()
        {
            Response.Write("<p><h1>Sorry, there was " + Application["NoOfErrors"].ToString() + " error:<br />");
            Response.Write(Server.GetLastError().Message + "</h1></p>");
            Server.ClearError(); //comment this line to see the difference

            /* The GetLastError method returns the last exception thrown.
               the GetLastError method displays the value of the Message property
               of the last exception thrown.

               The ClearError method clears the last exception thrown.
               If you didn't call the ClearError method, the default error page
               generated by the ASP.NET framework would be displayed,
               and no one would ever see the polite apology.
            */
        }
    }
}